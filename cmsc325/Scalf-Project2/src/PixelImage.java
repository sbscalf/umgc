import java.awt.Color;
import java.awt.image.BufferedImage;

public class PixelImage {
	private final static int IMGSIZEX = 25;
	private final static int IMGSIZEY = 25;
	
	private final static Color BROWN = new Color(102, 51, 0);
	
	private static final Color[] colors =
		{
			Color.WHITE, Color.BLACK, Color.GRAY, Color.RED, Color.YELLOW,
			Color.BLUE, Color.CYAN, Color.ORANGE, Color.PINK, BROWN
		};
	
	public BufferedImage getImage(int[][] data) {
		BufferedImage image = new BufferedImage(IMGSIZEX, IMGSIZEY, BufferedImage.TYPE_INT_RGB);
		Color cellColor = colors[0];
		for (int row = 0; row < IMGSIZEY; row++) {
            for (int col = 0; col < IMGSIZEX; col++) {
            	cellColor = colors[data[row][col]];
                image.setRGB(col, row, cellColor.getRGB());
            } // End for y.
        } // End for x.
        return image;
	}
	
	// Translated from pixel art by captainAyan (https://github.com/captainAyan/pixelart)
	public static final int[][] pikachu = new int[][]
	{
	 {0,0,0,1,1, 0,0,0,0,0, 0,0,0,0,0, 0,0,0,0,0, 0,0,0,0,0},
	 {0,0,0,1,1, 0,0,0,0,0, 0,0,0,0,0, 0,0,0,0,0, 0,0,0,1,1},
	 {0,0,1,1,1, 0,0,0,0,0, 0,0,0,0,0, 0,0,0,0,0, 0,1,1,1,1},
	 {0,1,1,1,1, 0,0,0,0,0, 0,0,0,0,0, 0,0,0,0,0, 1,4,1,1,1},
	 {1,1,1,1,1, 1,0,0,0,0, 0,0,0,0,0, 0,0,0,1,1, 4,4,1,1,1},
	 
	 {1,4,4,4,4, 1,0,0,0,0, 0,0,0,0,0, 0,0,1,4,4, 4,4,1,1,0},
	 {1,4,4,4,4, 1,0,1,1,1, 1,1,1,0,0, 1,1,4,4,4, 4,4,1,1,0},
	 {1,1,4,4,4, 1,1,4,4,4, 4,4,4,1,1, 4,4,4,4,4, 4,4,1,0,0},
	 {1,1,4,4,4, 4,4,4,4,4, 4,4,4,4,4, 4,4,4,4,4, 4,4,1,0,0},
	 {0,1,4,4,4, 4,4,4,4,4, 4,4,4,4,4, 4,4,4,4,4, 4,1,0,0,0},
	 
	 {0,1,4,1,4, 4,4,4,4,4, 4,4,4,4,4, 4,4,4,1,4, 1,0,0,0,0},
	 {0,0,1,4,4, 4,4,4,4,4, 4,4,4,4,4, 4,4,4,4,1, 0,0,0,0,0},
	 {0,0,1,4,4, 4,4,4,4,4, 4,4,4,4,4, 4,4,4,4,1, 0,0,0,0,0},
	 {0,1,4,4,4, 1,1,4,4,4, 4,4,4,4,4, 1,1,4,4,4, 1,0,0,0,0},
	 {0,1,4,4,1, 0,1,1,4,4, 4,4,4,4,1, 0,1,1,4,4, 1,0,0,0,0},
	 
	 {0,1,4,4,1, 1,1,1,4,4, 4,4,4,4,1, 1,1,1,4,4, 1,0,0,0,0},
	 {0,1,4,4,4, 1,1,4,4,4, 1,1,4,4,4, 1,1,4,4,4, 1,0,0,0,0},
	 {1,4,4,3,3, 4,4,4,4,4, 4,4,4,4,4, 4,4,3,3,4, 4,1,0,0,0},
	 {1,4,3,3,3, 3,4,4,1,4, 1,1,4,1,4, 4,3,3,3,3, 4,1,0,0,0},
	 {1,4,3,3,3, 3,4,4,4,1, 3,3,1,4,4, 4,3,3,3,3, 4,1,0,0,0},
	 
	 {0,1,4,3,3, 4,4,4,4,1, 3,3,1,4,4, 4,4,3,3,4, 1,0,0,0,0},
	 {0,0,1,4,4, 4,4,4,4,1, 3,3,1,4,4, 4,4,4,4,1, 0,0,0,0,0},
	 {0,0,0,1,1, 4,4,4,4,4, 1,1,4,4,4, 4,4,1,1,0, 0,0,0,0,0},
	 {0,0,0,0,0, 1,1,1,4,4, 4,4,4,4,1, 1,1,0,0,0, 0,0,0,0,0},
	 {0,0,0,0,0, 0,0,0,1,1, 1,1,1,1,0, 0,0,0,0,0, 0,0,0,0,0}
	};
			
	// Translated from pixel art by Susan Guinto
	// https://bbrik.co/blogs/pixel-art/alpaca-pixel-art
	// https://cdn.shopify.com/s/files/1/0822/1983/articles/alpaca-pixel-art-pixel-art-alpaca-animal-llama-pixel-8bit.png?v=1501129094
	public static final int[][] alpaca = new int[][]
	{
	 {0,0,0,0,0, 0,0,0,0,0, 0,0,0,0,0, 0,0,0,0,0, 0,0,0,0,0},
	 {0,0,0,0,0, 0,0,0,0,0, 0,0,0,0,0, 0,0,0,0,0, 0,0,0,0,0},
	 {0,0,0,0,0, 0,0,0,0,0, 0,0,0,0,0, 0,0,0,0,0, 0,0,0,0,0},
	 {0,0,0,0,0, 0,0,0,0,1, 1,1,1,1,1, 1,0,0,0,0, 0,0,0,0,0},
	 {0,0,0,0,0, 0,0,1,1,1, 0,0,0,0,0, 1,1,1,0,0, 0,0,0,0,0},
	 
	 {0,0,0,1,1, 1,1,1,0,0, 0,0,0,0,0, 0,0,1,1,1, 1,1,0,0,0},
	 {0,0,0,1,0, 0,0,0,0,0, 0,0,0,0,0, 0,0,0,0,0, 0,1,0,0,0},
	 {0,0,0,1,1, 0,0,0,0,0, 0,0,0,0,0, 0,0,0,0,0, 1,1,0,0,0},
	 {0,0,0,0,1, 1,1,0,1,1, 0,0,1,0,0, 1,1,0,1,1, 1,0,0,0,0},
	 {0,0,0,0,0, 0,1,8,1,1, 0,1,1,1,0, 1,1,8,1,0, 0,0,0,0,0},
	 
	 {0,0,0,0,0, 0,1,8,8,0, 0,0,0,0,0, 0,8,8,1,0, 0,0,0,0,0},
	 {0,0,0,0,0, 0,1,0,0,0, 0,0,0,0,0, 0,0,0,1,0, 0,0,0,0,0},
	 {0,0,0,0,0, 0,1,1,0,0, 0,0,0,0,0, 0,0,1,1,0, 0,0,0,0,0},
	 {0,0,0,0,0, 0,0,1,1,3, 3,1,1,1,3, 3,1,1,1,1, 0,0,0,0,0},
	 {0,0,0,0,0, 0,0,0,1,3, 1,4,4,4,1, 3,0,1,0,1, 0,0,0,0,0},
	 
	 {0,0,0,0,0, 0,0,0,1,0, 1,4,4,4,1, 0,0,0,1,1, 0,0,0,0,0},
	 {0,0,0,0,0, 0,0,0,1,0, 1,4,1,4,1, 0,0,0,0,1, 0,0,0,0,0},
	 {0,0,0,0,0, 0,0,0,1,1, 0,1,1,1,0, 0,0,0,0,1, 0,0,0,0,0},
	 {0,0,0,0,0, 0,0,0,0,1, 0,0,0,0,0, 0,0,0,0,1, 0,0,0,0,0},
	 {0,0,0,0,0, 0,0,0,0,1, 0,1,1,1,0, 1,1,1,0,1, 0,0,0,0,0},
	 
	 {0,0,0,0,0, 0,0,0,0,1, 1,1,0,1,1, 1,0,1,1,1, 0,0,0,0,0},
	 {0,0,0,0,0, 0,0,0,0,1, 1,0,0,1,1, 0,0,0,1,1, 0,0,0,0,0},
	 {0,0,0,0,0, 0,0,0,0,0, 0,0,0,0,0, 0,0,0,0,0, 0,0,0,0,0},
	 {0,0,0,0,0, 0,0,0,0,0, 0,0,0,0,0, 0,0,0,0,0, 0,0,0,0,0},
	 {0,0,0,0,0, 0,0,0,0,0, 0,0,0,0,0, 0,0,0,0,0, 0,0,0,0,0},
	};
		
	// Translated from pixel art by Susan Guinto
	// https://bbrik.co/blogs/pixel-art/noodles-pixel-art
	// https://cdn.shopify.com/s/files/1/0822/1983/articles/noodles-pixel-art-pixel-art-noodles-food-delicious-cute-hot-pixel-8bit.png?v=1501224831
	public static final int[][] noodles = new int[][]
	{
	 {0,0,0,1,1, 0,0,0,0,0, 0,0,0,0,0, 0,0,0,0,0, 0,0,0,0,0},
	 {1,1,0,1,9, 1,0,0,0,0, 0,0,0,0,0, 0,0,0,0,0, 0,0,0,0,0},
	 {1,9,1,1,9, 9,1,0,0,0, 0,0,0,0,0, 0,0,0,0,0, 0,0,0,0,0},
	 {1,9,9,1,1, 9,9,1,0,0, 0,0,0,0,0, 0,0,0,0,0, 0,0,0,0,0},
	 {0,1,9,9,1, 1,9,9,1,7, 7,7,7,7,7, 7,0,0,0,0, 0,0,0,0,0},
	 
	 {0,0,1,9,9, 1,1,9,7,4, 4,4,7,7,4, 7,7,7,0,0, 0,0,0,0,0},
	 {0,0,0,1,9, 9,1,1,7,7, 7,7,7,7,7, 4,4,7,7,7, 7,7,0,0,0},
	 {0,0,0,0,7, 7,7,7,7,4, 4,7,4,4,4, 7,7,7,7,7, 7,7,7,0,0},
	 {0,0,0,7,4, 4,4,4,4,4, 7,7,7,7,7, 7,7,7,4,4, 4,4,4,7,0},
	 {0,0,7,4,7, 7,7,7,7,7, 7,7,4,4,4, 4,4,4,7,7, 7,7,7,7,0},
	 
	 {0,1,1,1,1, 1,1,1,1,1, 1,1,1,1,1, 1,1,1,1,1, 1,1,1,1,1},
	 {0,1,0,3,0, 3,0,0,0,0, 0,0,0,0,0, 0,0,0,0,0, 0,0,0,2,1},
	 {0,1,3,3,3, 3,3,0,0,0, 3,0,0,0,3, 0,0,0,3,0, 0,0,3,2,1},
	 {0,1,3,3,3, 3,3,0,0,0, 0,0,0,0,0, 0,0,0,0,0, 0,2,2,2,1},
	 {0,1,0,3,3, 3,0,0,3,0, 0,0,3,0,0, 0,3,0,0,0, 3,2,2,2,1},
	 
	 {0,1,0,0,3, 0,0,0,0,0, 0,0,0,0,0, 0,0,0,0,2, 2,2,2,2,1},
	 {0,1,1,1,1, 1,1,1,1,1, 1,1,1,1,1, 1,1,1,1,1, 1,1,1,1,1},
	 {0,0,1,0,0, 0,0,0,0,0, 0,0,0,0,0, 0,0,0,0,0, 2,2,2,1,0},
	 {0,0,1,0,0, 0,1,1,0,0, 0,0,0,0,0, 0,0,0,1,1, 2,2,2,1,0},
	 {0,0,0,1,0, 1,1,0,1,0, 0,0,0,0,0, 0,2,1,0,1, 1,2,1,0,0},
	 
	 {0,0,0,1,0, 1,1,1,1,0, 0,0,0,0,0, 2,2,1,1,1, 1,2,1,0,0},
	 {0,0,0,0,1, 0,1,1,0,0, 0,0,0,2,2, 2,2,2,1,1, 2,1,0,0,0},
	 {0,0,0,0,0, 1,8,8,0,0, 0,2,2,2,2, 2,2,2,8,8, 1,0,0,0,0},
	 {0,0,0,0,0, 1,1,2,2,2, 2,2,2,2,2, 2,2,2,2,1, 1,0,0,0,0},
	 {0,0,0,0,0, 0,1,1,1,1, 1,1,1,1,1, 1,1,1,1,1, 0,0,0,0,0}
	};
	
	// Inspired by The Legend of Zelda (Nintendo)
	public static final int[][] triforce = new int[][]
	{
	 {0,0,0,0,0, 0,0,0,0,0, 0,0,1,0,0, 0,0,0,0,0, 0,0,0,0,0},
	 {0,0,0,0,0, 0,0,0,0,0, 0,1,4,1,0, 0,0,0,0,0, 0,0,0,0,0},
	 {0,0,0,0,0, 0,0,0,0,0, 0,1,4,1,0, 0,0,0,0,0, 0,0,0,0,0},
	 {0,0,0,0,0, 0,0,0,0,0, 1,4,4,4,1, 0,0,0,0,0, 0,0,0,0,0},
	 {0,0,0,0,0, 0,0,0,0,0, 1,4,4,4,1, 0,0,0,0,0, 0,0,0,0,0},
	 
	 {0,0,0,0,0, 0,0,0,0,1, 4,4,4,4,4, 1,0,0,0,0, 0,0,0,0,0},
	 {0,0,0,0,0, 0,0,0,0,1, 4,4,4,4,4, 1,0,0,0,0, 0,0,0,0,0},
	 {0,0,0,0,0, 0,0,0,1,4, 4,4,4,4,4, 4,1,0,0,0, 0,0,0,0,0},
	 {0,0,0,0,0, 0,0,0,1,4, 4,4,4,4,4, 4,1,0,0,0, 0,0,0,0,0},
	 {0,0,0,0,0, 0,0,1,4,4, 4,4,4,4,4, 4,4,1,0,0, 0,0,0,0,0},
	 
	 {0,0,0,0,0, 0,0,1,4,4, 4,4,4,4,4, 4,4,1,0,0, 0,0,0,0,0},
	 {0,0,0,0,0, 0,1,4,4,4, 4,4,4,4,4, 4,4,4,1,0, 0,0,0,0,0},
	 {0,0,0,0,0, 0,1,1,1,1, 1,1,1,1,1, 1,1,1,1,0, 0,0,0,0,0},
	 {0,0,0,0,0, 1,4,1,0,0, 0,0,0,0,0, 0,0,1,4,1, 0,0,0,0,0},
	 {0,0,0,0,1, 4,4,4,1,0, 0,0,0,0,0, 0,1,4,4,4, 1,0,0,0,0},
	 
	 {0,0,0,0,1, 4,4,4,1,0, 0,0,0,0,0, 0,1,4,4,4, 1,0,0,0,0},
	 {0,0,0,1,4, 4,4,4,4,1, 0,0,0,0,0, 1,4,4,4,4, 4,1,0,0,0},
	 {0,0,0,1,4, 4,4,4,4,1, 0,0,0,0,0, 1,4,4,4,4, 4,1,0,0,0},
	 {0,0,1,4,4, 4,4,4,4,1, 0,0,0,0,0, 1,4,4,4,4, 4,4,1,0,0},
	 {0,0,1,4,4, 4,4,4,4,4, 1,0,0,0,1, 4,4,4,4,4, 4,4,1,0,0},
	 
	 {0,1,4,4,4, 4,4,4,4,4, 1,0,0,0,1, 4,4,4,4,4, 4,4,4,1,0},
	 {0,1,4,4,4, 4,4,4,4,4, 4,1,0,1,4, 4,4,4,4,4, 4,4,4,1,0},
	 {1,4,4,4,4, 4,4,4,4,4, 4,1,0,1,4, 4,4,4,4,4, 4,4,4,4,1},
	 {1,4,4,4,4, 4,4,4,4,4, 4,4,1,4,4, 4,4,4,4,4, 4,4,4,4,1},
	 {1,1,1,1,1, 1,1,1,1,1, 1,1,1,1,1, 1,1,1,1,1, 1,1,1,1,1}
	};
	
	// Translated from pixel art by jakexu50
	// https://www.instructables.com/Pixel-Art-2/
	public static final int[][] megaman = new int[][]
	{
	 {0,0,0,0,0, 0,0,0,0,0, 0,0,0,0,0, 0,0,0,0,0, 0,0,0,0,0},
	 {0,0,0,0,0, 0,0,0,0,0, 0,0,1,1,1, 0,0,0,0,0, 0,0,0,0,0},
	 {0,0,0,0,0, 0,0,0,0,0, 1,1,1,6,6, 1,0,0,0,0, 0,0,0,0,0},
	 {0,0,0,0,0, 0,0,0,0,1, 5,5,5,1,6, 6,1,0,0,0, 0,0,0,0,0},
	 {0,0,0,0,0, 0,0,0,1,5, 5,5,5,5,1, 1,1,1,0,0, 0,0,0,0,0},
	 
	 {0,0,0,0,0, 0,0,0,1,5, 5,5,5,5,1, 6,6,5,1,0, 0,0,0,0,0},
	 {0,0,0,0,0, 0,0,1,6,5, 5,5,5,5,5, 1,1,5,1,0, 0,0,0,0,0},
	 {0,0,0,0,0, 0,0,1,6,5, 5,0,0,0,0, 5,5,0,1,0, 0,0,0,0,0},
	 {0,0,0,0,0, 0,0,1,6,5, 0,0,0,1,1, 0,1,0,1,0, 0,0,0,0,0},
	 {0,0,0,0,0, 0,0,0,1,5, 0,0,0,1,1, 0,1,0,1,0, 0,0,0,0,0},
	 
	 {0,0,0,0,0, 0,0,1,1,5, 0,0,0,0,0, 0,0,0,1,0, 0,0,0,0,0},
	 {0,0,0,0,0, 1,1,6,6,1, 5,0,1,1,1, 1,0,1,1,1, 0,0,0,0,0},
	 {0,0,0,0,1, 5,6,6,6,6, 1,0,0,0,0, 0,1,6,6,5, 1,0,0,0,0},
	 {0,0,0,0,1, 5,5,6,6,6, 6,1,1,1,1, 1,6,6,5,5, 1,0,0,0,0},
	 {0,0,0,1,5, 5,5,6,1,6, 6,6,6,6,6, 6,1,6,5,5, 5,1,0,0,0},
	 
	 {0,0,0,1,5, 5,1,1,1,6, 6,6,6,6,6, 6,1,1,1,5, 5,1,0,0,0},
	 {0,0,0,1,5, 5,5,1,1,6, 6,6,6,6,6, 6,1,1,5,5, 5,1,0,0,0},
	 {0,0,0,1,5, 5,5,1,1,5, 5,5,5,5,5, 5,1,1,5,5, 5,1,0,0,0},
	 {0,0,0,0,1, 1,1,0,1,5, 5,5,5,5,5, 5,1,0,1,1, 1,0,0,0,0},
	 {0,0,0,0,0, 0,0,1,6,6, 5,5,5,5,6, 6,6,1,0,0, 0,0,0,0,0},
	 
	 {0,0,0,0,0, 0,1,5,5,6, 6,6,1,6,6, 6,6,5,1,0, 0,0,0,0,0},
	 {0,0,0,0,0, 1,1,5,5,5, 6,1,0,1,6, 5,5,5,1,1, 0,0,0,0,0},
	 {0,0,0,1,1, 5,5,5,5,5, 1,0,0,0,1, 5,5,5,5,5, 1,1,0,0,0},
	 {0,0,1,5,5, 5,5,5,5,5, 1,0,0,0,1, 5,5,5,5,5, 5,5,1,0,0},
	 {0,0,1,1,1, 1,1,1,1,1, 1,0,0,0,1, 1,1,1,1,1, 1,1,1,0,0}
	};
}
